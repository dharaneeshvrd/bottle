{{- $scenario := .Values.scenario -}}
{{- $image := .Values.image -}}
{{- $scope := .Values.scope -}}
{{- $stats := .Values.stats -}}
{{- $sensor := .Values.sensor -}}
{{- $key := .Values.key -}}
{{- $proxy := .Values.proxy -}}
{{ range $shipname, $ship := .Values.ships }}
{{- $binary_name := $ship.binary_name | default "ship" -}}
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
    name: {{ $shipname }}
    labels:
        scenario: {{ $scenario }}
spec:
    replicas: {{ $ship.replicas }}

    selector:
        matchLabels:
            scenario: {{ $scenario }}
            ship: {{ $shipname }}
    template:
        metadata:
            labels:
                scenario: {{ $scenario }}
                ship: {{ $shipname }}
        spec:
            containers:
                - name: ship
                  image: {{ $image | default "bottle:latest" }}
                  command: ["/sbin/init"]
                  imagePullPolicy: Always
                  lifecycle:
                      preStop:
                          exec:
                              command: ["/bin/sh","-c","killall -SIGUSR1 {{ $binary_name }}; sleep 4"]
                  securityContext:
                      privileged: true
                      capabilities:
                          add:
                              - SYS_PTRACE
                              - NET_ADMIN
                              - NET_RAW
                  env:
                    {{- if $proxy  }}
                    - name: HTTPS_PROXY
                      value: {{ $proxy }}
                    {{- end }}
                    - name: BOTTLE_SCOPE
                      value: {{ $scope | default "Default"}}
                    - name: BOTTLE_SCENARIO
                      value: {{ $scenario }}
                    - name: BOTTLE_SHIP
                      value: {{ $shipname }}
                    - name: BOTTLE_STATS
                      value: {{ $stats | default "false" | toString | quote }}
                    - name: BOTTLE_SENSOR
                      value: {{ $sensor | default "true" | toString | quote }}
                  volumeMounts:
                    - mountPath: /etc/ship
                      name: config
                    - mountPath: /sys/fs/cgroup
                      name: systemd-v
                    - mountPath: /run
                      name: tmpfs-v
            volumes:
                - name: tet
                  emptyDir: {}
                - name: config
                  configMap:
                    name: {{ $scenario }}-config
                    items:
                        - key: {{ $shipname }}
                          path: conf.yaml
                - name: systemd-v
                  hostPath:
                      path: /sys/fs/cgroup
                      type: Directory
                - name: tmpfs-v
                  emptyDir:
                      medium: Memory
---
{{end}}
