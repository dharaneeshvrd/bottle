{{- $scenario := .Values.scenario -}}
{{- $image := .Values.image -}}
{{- $scope := .Values.scope -}}
{{- $key := .Values.key -}}
{{- $proxy := .Values.proxy -}}
{{- $sensor := .Values.sensor -}}
{{- $shipname := "stats" }}
{{- $binary_name := "stats" }}
{{- $statsPort := .Values.statsPort -}}
{{- if .Values.stats  }}
kind: Service
apiVersion: v1
metadata:
  name: svc-{{ $scenario }}-stats
  labels:
    scenario: {{ $scenario }}
spec:
  clusterIP: None
  selector:
    scenario: {{ $scenario }}
    stats: "yes"
  ports:
   - name: stats
     protocol: TCP
     port: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: stats-{{ $scenario }}
  labels:
    scenario: {{ $scenario }}
spec:
  type: NodePort
  selector:
    scenario: {{ $scenario }}
    stats: "yes"
  ports:
   - name: stats
     protocol: TCP
     port: 8080
     {{- if $statsPort }}
     nodePort: {{ int $statsPort }}
     {{- end}}
---
kind: Pod
apiVersion: v1
metadata:
    name: {{ $scenario }}-stats
    labels:
        scenario: {{ $scenario }}
        stats: "yes"
spec:
    shareProcessNamespace: true
    containers:
        - name: stats
          image: tigarner/cargo:latest
          volumeMounts:
            - mountPath: /etc/cargo
              name: stats-config
        - name: ship
          image: {{ $image | default "bottle:latest" }}
          command: ["/bin/sh", "-c", "./launch_ship.sh {{ $binary_name }} {{ $key }} {{ $proxy }}"]
          lifecycle:
            preStop:
                exec:
                  command: ["/bin/sh","-c","killall -SIGUSR1 {{ $binary_name }}; sleep 4"]
          securityContext:
            capabilities:
                add:
                    - SYS_PTRACE
                    - NET_ADMIN
                    - NET_RAW
          env:
            {{- if $proxy  }}
            - name: HTTPS_PROXY
              value: {{ $proxy }}
            {{- end }}
            - name: BOTTLE_SCOPE
              value: {{ $scope | default "Default"}}
            - name: BOTTLE_SCENARIO
              value: {{ $scenario }}
            - name: BOTTLE_SHIP
              value: {{ $shipname }}
            - name: BOTTLE_SENSOR
              value: {{ $sensor | default "true" | toString | quote }}
          volumeMounts:
            - mountPath: /etc/ship
              name: config
    volumes:
        - name: stats-config
          configMap:
            name: {{ $scenario }}-stats-config
            items:
                - key: ships
                  path: conf.yaml
        - name: config
          configMap:
            name: {{ $scenario }}-stats-config
            items:
                - key: stats
                  path: conf.yaml
        - name: tet
          emptyDir: {}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.scenario }}-stats-config
  labels:
    scenario: {{ .Values.scenario }}
data:
  stats : ""
  ships: | 
    ships: {{ .Values.ships | toYaml | trimSuffix "\n" | nindent 5  }}
{{- end }}
